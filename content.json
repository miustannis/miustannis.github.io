{"meta":{"title":"Miao","subtitle":null,"description":"","author":"miao","url":"https://miustannis.github.io","root":"/"},"pages":[{"title":"个人简介","date":"2022-03-23T16:01:54.000Z","updated":"2025-01-24T16:00:56.831Z","comments":true,"path":"about/index.html","permalink":"https://miustannis.github.io/about/index.html","excerpt":"","text":"Education： 本科毕业于 苏州大学 电气工程及其自动化 硕士就读于 中国科学技术大学 生物医学工程 Hobbies： STEM (Maths) ART (music | video games | drawing | movies) DIY (GUNDAM model | electronic products) 目前在苏州摸鱼，即将去合肥摸鱼 CV中文版本 English Version暂无"},{"title":"categories","date":"2022-04-01T03:49:27.000Z","updated":"2024-08-31T13:32:40.374Z","comments":true,"path":"categories/index.html","permalink":"https://miustannis.github.io/categories/index.html","excerpt":"","text":""},{"title":"404","date":"2018-09-30T09:25:30.000Z","updated":"2024-08-31T13:23:24.772Z","comments":true,"path":"404/index.html","permalink":"https://miustannis.github.io/404/index.html","excerpt":"","text":""},{"title":"tags","date":"2024-08-31T13:20:15.000Z","updated":"2024-08-31T13:20:27.842Z","comments":true,"path":"tags/index.html","permalink":"https://miustannis.github.io/tags/index.html","excerpt":"","text":""},{"title":"friends","date":"2024-08-31T13:21:16.000Z","updated":"2024-08-31T13:21:26.425Z","comments":true,"path":"friends/index.html","permalink":"https://miustannis.github.io/friends/index.html","excerpt":"","text":""}],"posts":[{"title":"STM32配置笔记参考","slug":"241121","date":"2024-11-21T10:45:34.000Z","updated":"2025-01-24T15:38:36.574Z","comments":true,"path":"2024/11/21/241121/","link":"","permalink":"https://miustannis.github.io/2024/11/21/241121/","excerpt":"大二时的笔记，upload当乐高说明书看","text":"大二时的笔记，upload当乐高说明书看 pdf嵌入使用了pdf.js插件，hexo-pdf这个插件在移动端不能很好地显示","categories":[{"name":"学习记录","slug":"学习记录","permalink":"https://miustannis.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"嵌入式","slug":"嵌入式","permalink":"https://miustannis.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"},{"name":"C","slug":"C","permalink":"https://miustannis.github.io/tags/C/"}]},{"title":"UART收发处理函数","slug":"串口收发处理函数","date":"2024-10-20T02:51:00.000Z","updated":"2024-12-11T06:10:18.125Z","comments":true,"path":"2024/10/20/串口收发处理函数/","link":"","permalink":"https://miustannis.github.io/2024/10/20/%E4%B8%B2%E5%8F%A3%E6%94%B6%E5%8F%91%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0/","excerpt":"","text":"UART（Universal Asynchronous Receiver&#x2F;Transmitter）是一种串行通信协议，在嵌入式系统和微控制器间数据传输中发挥着核心作用。UART协议通过异步方式传输数据，不依赖于共享时钟信号，简化了通信线路的需求。每次传输包括起始位、数据位、可选的奇偶校验位以及停止位，这种结构支持从简单的传感器到复杂的处理器之间的可靠数据交换。 其重要性还体现在其广泛的兼容性和低成本实现上。它可以通过简单的两线（TX和RX）接口实现全双工通信，极大地降低了系统的硬件复杂性。此外，UART通信协议可以适应不同的波特率设置，使其能够灵活地调整以匹配特定应用的速度要求。在许多工业和消费电子产品中，UART仍然是实现可靠串行通信的首选技术，尤其在资源受限的环境中显示出其高效和经济的优势。（以上均为GPT生成） 在进行传感器测试时，常用到UART，这里mark一下自己常用的HAL库函数封装，免得后续一直翻之前的程序 函数需要用到的全局变量如下： char send[20] = &#123;0&#125;; //传输用字符数组，储存字符串 uint8_t rx_buffer = 0; //接收字符缓冲区 char rx_receiver[20] = &#123;0&#125;; //接收用字符数组 uint8_t rx_num = 0; //接收字符数量 uint8_t uart_start_flag = 0; //接收标志位 __IO uint32_t uart_gettick = 0; //系统时钟比较变量 /* 测试变量 uint16_t pwm_duty = 0; uint8_t startbegin = 0xff; uint8_t startbegin2 = 0x00; */ 在硬件配置时要打开UART中断： HAL_UART_Receive_IT(&amp;huart1 , &amp;rx_buffer, 1); 中断回调函数如下： void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) &#123; if(rx_num == 0)&#123; uart_gettick = uwTick; uart_start_flag = 1; &#125; if(uart_start_flag == 1)&#123; rx_receiver[rx_num] = rx_buffer; rx_num++; &#125; HAL_UART_Receive_IT(&amp;huart1 , &amp;rx_buffer, 1); &#125; 主循环中的处理函数如下： void UART_RX_PROC(void) &#123; if((( uwTick- uart_gettick ) >=10) &amp;&amp; (( uwTick- uart_gettick ) &lt;=600) &amp;&amp; (uart_start_flag == 1))&#123; if(rx_receiver[0] == '&amp;' )&#123; if( rx_num == 2) &#123; //示例：传输pwm占空比 pwm_duty = rx_receiver[1]-'0'; &#125; else if( rx_num == 3)&#123; pwm_duty = (rx_receiver[1]-'0')*10 + rx_receiver[2]-'0'; &#125; else if( rx_num == 4)&#123; pwm_duty = (rx_receiver[1]-'0')*100 + (rx_receiver[2]-'0')*10 + rx_receiver[3]-'0'; &#125; else if ( rx_num >= 5)&#123; pwm_duty = 1000; &#125; &#125; HAL_UART_Transmit(&amp;huart1, &amp;startbegin, 1,0xffff); HAL_UART_Transmit(&amp;huart1, &amp;startbegin2, 1,0xffff); HAL_UART_Transmit(&amp;huart1, &amp;startbegin, 1,0xffff); rx_num = 0; uart_start_flag = 0; &#125; &#125; 这里的函数主要是用以处理字符串的，应付一些的简单的应用已经够用了，当然，也能在此基础上扩展。","categories":[{"name":"学习记录","slug":"学习记录","permalink":"https://miustannis.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"嵌入式","slug":"嵌入式","permalink":"https://miustannis.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"},{"name":"C","slug":"C","permalink":"https://miustannis.github.io/tags/C/"}]},{"title":"TFTLCD驱动","slug":"TFTLCD驱动","date":"2024-09-28T06:00:30.000Z","updated":"2024-12-11T06:13:31.973Z","comments":true,"path":"2024/09/28/TFTLCD驱动/","link":"","permalink":"https://miustannis.github.io/2024/09/28/TFTLCD%E9%A9%B1%E5%8A%A8/","excerpt":"","text":"在使用Img2LCD取模软件和ST7735S驱动IC控制LCD时，发现API中显示图片的函数调用后显示异常 原函数： void ST7735_DrawImage(uint16_t x, uint16_t y, uint16_t w, uint16_t h, const uint16_t* data) &#123; if((x >= ST7735_WIDTH) || (y >= ST7735_HEIGHT)) return; if((x + w - 1) >= ST7735_WIDTH) return; if((y + h - 1) >= ST7735_HEIGHT) return; ST7735_Select(); ST7735_SetAddressWindow(x, y, x+w-1, y+h-1); ST7735_WriteData((uint8_t*)data, sizeof(uint16_t)*w*h); ST7735_Unselect(); &#125; 输入数据要求16位rgb565格式图片，与Img2LCD取模软件两个8位数表示一个像素点的编码逻辑不同，首次修改仅改了原函数输入数据的格式：将data16位常量数据指针类型改为8位无符号变量指针类型，且在spi写入数据时将数据量乘以2，修改后的函数如下： void ST7735_DrawImage8bit_Img2LCD(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t* data) &#123; if((x >= ST7735_WIDTH) || (y >= ST7735_HEIGHT)) return; if((x + w - 1) >= ST7735_WIDTH) return; if((y + h - 1) >= ST7735_HEIGHT) return; ST7735_Select(); ST7735_SetAddressWindow(x, y, x+w-1, y+h-1); ST7735_WriteData((uint8_t*)data, sizeof(uint8_t)*w*h*2); ST7735_Unselect(); &#125; 但是烧录测试后LCD显示颜色异常且边缘模糊，初步推测是图片数据原本的问题，考虑到可能2个8位数据合并时高8位与低8位的顺序反了，在MATLAB中进行数组元素两两翻转验证： function swappedArray = swapPairs(inputArray) if iscolumn(inputArray) inputArray = inputArray'; end n = length(inputArray); if mod(n, 2) ~= 0 inputArray(end+1) = NaN; end swappedArray = inputArray; swappedArray(1:2:end) = inputArray(2:2:end); swappedArray(2:2:end) = inputArray(1:2:end); swappedArray = swappedArray(~isnan(swappedArray)); end 将原始图片数据处理后再进行烧录，发现显示正常，问题定位到数组元素的写入顺序，解决方法较多，这里我直接在函数中将原始数组变换，最终的函数如下： void ST7735_DrawImage8bit_Img2LCD(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t* data) &#123; uint32_t i = 0; uint8_t temp = 0; if((x >= ST7735_WIDTH) || (y >= ST7735_HEIGHT)) return; if((x + w - 1) >= ST7735_WIDTH) return; if((y + h - 1) >= ST7735_HEIGHT) return; /* Swap adjacent elements in the data array */ for ( i = 0; i &lt; w * h * 2; i += 2) &#123; if (i + 1 &lt; w * h * 2) &#123; temp = data[i]; data[i] = data[i + 1]; data[i + 1] = temp; &#125; &#125; ST7735_Select(); ST7735_SetAddressWindow(x, y, x+w-1, y+h-1); ST7735_WriteData((uint8_t*)data, sizeof(uint8_t)*w*h*2); ST7735_Unselect(); &#125; 看看显示效果：","categories":[{"name":"学习记录","slug":"学习记录","permalink":"https://miustannis.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"嵌入式","slug":"嵌入式","permalink":"https://miustannis.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"},{"name":"C","slug":"C","permalink":"https://miustannis.github.io/tags/C/"},{"name":"MATLAB","slug":"MATLAB","permalink":"https://miustannis.github.io/tags/MATLAB/"}]},{"title":"西南风光","slug":"西南风光","date":"2024-09-15T17:01:33.000Z","updated":"2025-01-24T15:41:38.828Z","comments":true,"path":"2024/09/16/西南风光/","link":"","permalink":"https://miustannis.github.io/2024/09/16/%E8%A5%BF%E5%8D%97%E9%A3%8E%E5%85%89/","excerpt":"2024年8月 迟来的fine journey 稍纵即逝","text":"2024年8月 迟来的fine journey 稍纵即逝 醉后不知天在水 满船清梦压星河","categories":[{"name":"闲散","slug":"闲散","permalink":"https://miustannis.github.io/categories/%E9%97%B2%E6%95%A3/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://miustannis.github.io/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"寒山寺闲逛","slug":"寒山寺闲逛","date":"2023-12-16T02:38:29.000Z","updated":"2025-01-24T14:54:45.553Z","comments":true,"path":"2023/12/16/寒山寺闲逛/","link":"","permalink":"https://miustannis.github.io/2023/12/16/%E5%AF%92%E5%B1%B1%E5%AF%BA%E9%97%B2%E9%80%9B/","excerpt":"","text":"有《枫桥夜泊》钟声的加持，也算名气不小的景点实际乏善可陈，没什么特点 张继的雕像侧躺在现代枫桥旁边手脚部位被游客盘得发亮，据说摸一摸家里小孩就能考上好大学","categories":[{"name":"闲散","slug":"闲散","permalink":"https://miustannis.github.io/categories/%E9%97%B2%E6%95%A3/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://miustannis.github.io/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"procreate社团设计x3","slug":"202203161","date":"2022-03-16T12:50:00.000Z","updated":"2025-01-24T15:43:26.999Z","comments":true,"path":"2022/03/16/202203161/","link":"","permalink":"https://miustannis.github.io/2022/03/16/202203161/","excerpt":"翻了翻之前的文件夹，自己在在本科社团宣传部一年好像也没什么创作成果","text":"翻了翻之前的文件夹，自己在在本科社团宣传部一年好像也没什么创作成果 首先是两个养老院的徽章，记得当时是在画第一个徽章的过程中错删了一个图层，然后碰巧搞出了一个镂空的效果，感觉还不错，就在第二个徽章里故技重施了一下，但没有原来的效果了 下图是大二上学期一次活动的海报设计，for苏州大学独墅湖校区冬至灯会 以上作品均由iPad绘画软件procreate绘制，方便使用，新手友好","categories":[{"name":"闲散","slug":"闲散","permalink":"https://miustannis.github.io/categories/%E9%97%B2%E6%95%A3/"}],"tags":[{"name":"绘画","slug":"绘画","permalink":"https://miustannis.github.io/tags/%E7%BB%98%E7%94%BB/"}]},{"title":"procreate绘画x3","slug":"20220316","date":"2022-03-16T11:32:26.000Z","updated":"2025-01-24T15:42:47.074Z","comments":true,"path":"2022/03/16/20220316/","link":"","permalink":"https://miustannis.github.io/2022/03/16/20220316/","excerpt":"或许有点蒸汽波","text":"或许有点蒸汽波","categories":[{"name":"闲散","slug":"闲散","permalink":"https://miustannis.github.io/categories/%E9%97%B2%E6%95%A3/"}],"tags":[{"name":"绘画","slug":"绘画","permalink":"https://miustannis.github.io/tags/%E7%BB%98%E7%94%BB/"}]},{"title":"插入图片(并居中)","slug":"20220321","date":"2022-03-15T01:32:46.000Z","updated":"2025-01-24T15:43:06.278Z","comments":true,"path":"2022/03/15/20220321/","link":"","permalink":"https://miustannis.github.io/2022/03/15/20220321/","excerpt":"插入图片之前打算在文章中插入图片，配置的过程中遇到了一些问题。","text":"插入图片之前打算在文章中插入图片，配置的过程中遇到了一些问题。 想在博客中引用外站图片问题不大，但Hexo默认插入图片只有这一个方法，对有本地化需求的人群来说不够方便，此时可以安装一个满足本地图片引用的插件，在国内某知名（c）专业（s）开发者（d）社区（n）里提供的90%的方案为以下命令：npm install hexo-asset-image –save该论坛上相互借鉴蔚然成风的壮景对我这个刚入门的小白真是非常险恶，此指令安装版本落后，无法有效显示图片，有效的版本安装命令如下：npm install https://github.com/CodeFalling/hexo-asset-image –save 修改_config.yml文件，将post_asset_folder:值改为true。 之后在新建一个博客的同时会生成同名文件夹，将需插入的图片放入该文件夹即可。文章中的具体引用代码为以下格式：(后来发现在source文件夹里新建一个名为images的文件夹存放图片也行) ![](1/image.jpg) 更改相对位置但这种方法在PC端有一个默认的问题就是图片插入后会自动左对齐，想要实现居中对齐，可以在markdown引用代码外部添加center元素，或者直接添加html元素，如下所示： &lt;center> ![...](xxx) &lt;/center> #or &lt;div align=center> ![...](xxx) &lt;/div> (因为我用VScode来打开博客的md文件进行编辑，在上传至本地网页时一开始发现图片无法加载，后来排查得出居中命令代码间的空行是必要的，不知道其他编辑器是否有这样的问题。) 还可以直接修改css文件，因为markdown插入图片的代码在最终渲染的时候变为html中的img元素。因此可以直接去博客主题文件的源代码中，找到控制文章内图片显示样式的css代码，将其修改成水平居中即可。前端编程中修改水平居中的方法非常多，以下是网上资源中提供的其中一种： 一般情况下可以在Hexo博客文件夹进入到主题模板的themes-&gt;(主题名称文件夹)-&gt;source-&gt;css-&gt;_partial中，找到post.styl文件，该post文件中保存的就是文章详情页里面的显示样式。然后找到里面正确的img元素，修改其样式，增加margin 0 auto这行指令。如下: .post-content position relative color c-666 img max-width 100% cursor pointer display block margin 0 auto 然后可以实现了。但我在自己当前使用的主题中并没有找到相关语段，由于技术比较拉跨，我决定还是先老实用前两种吧。 [后期补丁：你需要一款名为Typora的markdown编辑软件]","categories":[{"name":"DIY","slug":"DIY","permalink":"https://miustannis.github.io/categories/DIY/"}],"tags":[{"name":"html","slug":"html","permalink":"https://miustannis.github.io/tags/html/"},{"name":"yaml","slug":"yaml","permalink":"https://miustannis.github.io/tags/yaml/"}]},{"title":"网站启用测试","slug":"1","date":"2022-03-14T07:08:39.000Z","updated":"2024-12-11T06:12:24.162Z","comments":true,"path":"2022/03/14/1/","link":"","permalink":"https://miustannis.github.io/2022/03/14/1/","excerpt":"","text":"支持站内文字搜索 支持代码块植入 支持评论系统（目前已关闭） [来自后期补丁]","categories":[{"name":"DIY","slug":"DIY","permalink":"https://miustannis.github.io/categories/DIY/"}],"tags":[{"name":"html","slug":"html","permalink":"https://miustannis.github.io/tags/html/"}]}],"categories":[{"name":"学习记录","slug":"学习记录","permalink":"https://miustannis.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"},{"name":"闲散","slug":"闲散","permalink":"https://miustannis.github.io/categories/%E9%97%B2%E6%95%A3/"},{"name":"DIY","slug":"DIY","permalink":"https://miustannis.github.io/categories/DIY/"}],"tags":[{"name":"嵌入式","slug":"嵌入式","permalink":"https://miustannis.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"},{"name":"C","slug":"C","permalink":"https://miustannis.github.io/tags/C/"},{"name":"MATLAB","slug":"MATLAB","permalink":"https://miustannis.github.io/tags/MATLAB/"},{"name":"摄影","slug":"摄影","permalink":"https://miustannis.github.io/tags/%E6%91%84%E5%BD%B1/"},{"name":"绘画","slug":"绘画","permalink":"https://miustannis.github.io/tags/%E7%BB%98%E7%94%BB/"},{"name":"html","slug":"html","permalink":"https://miustannis.github.io/tags/html/"},{"name":"yaml","slug":"yaml","permalink":"https://miustannis.github.io/tags/yaml/"}]}